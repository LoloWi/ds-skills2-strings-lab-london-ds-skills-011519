<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="2" name="pytest" skips="0" tests="5" time="0.576"><testcase classname="pytests.test_index" file="pytests/test_index.py" line="10" name="test_sentence" time="0.003423929214477539"><failure message="AssertionError: Remember we want to *captilize* this string in order to lower case all but the first character in this string
assert &apos;wow we love ... and strings!&apos; == &apos;Wow we love c... and strings!&apos;
  - wow we love coding and strings!
  ? ^
  + Wow we love coding and strings!
  ? ^">def test_sentence():
        assert sentence is not None, &quot;The sentence variable must be assigned to a value!&quot;
        assert type(sentence) == type(&quot;&quot;), &quot;The sentence must be a string!&quot;
&gt;       assert sentence == &apos;Wow we love coding and strings!&apos;, &quot;Remember we want to *captilize* this string in order to lower case all but the first character in this string&quot;
E       AssertionError: Remember we want to *captilize* this string in order to lower case all but the first character in this string
E       assert &apos;wow we love ... and strings!&apos; == &apos;Wow we love c... and strings!&apos;
E         - wow we love coding and strings!
E         ? ^
E         + Wow we love coding and strings!
E         ? ^

pytests/test_index.py:14: AssertionError</failure></testcase><testcase classname="pytests.test_index" file="pytests/test_index.py" line="15" name="test_flatiron_mantra" time="0.0010304450988769531"></testcase><testcase classname="pytests.test_index" file="pytests/test_index.py" line="20" name="test_num_to_string" time="0.0009591579437255859"></testcase><testcase classname="pytests.test_index" file="pytests/test_index.py" line="25" name="test_full_address" time="0.0013506412506103516"><failure message="AssertionError: 
assert &apos;1234 Gymnasiumstr,NYC USA&apos; == &apos;1234 Abc street, Hometown USA&apos;
  - 1234 Gymnasiumstr,NYC USA
  + 1234 Abc street, Hometown USA">def test_full_address():
        assert full_address is not None, &quot;The full_address variable must be assigned to a value!&quot;
        assert type(full_address) == type(&quot;&quot;), &quot;The full_address must be a string!&quot;
&gt;       assert full_address == &apos;1234 Abc street, Hometown USA&apos;, &quot;&quot;
E       AssertionError: 
E       assert &apos;1234 Gymnasiumstr,NYC USA&apos; == &apos;1234 Abc street, Hometown USA&apos;
E         - 1234 Gymnasiumstr,NYC USA
E         + 1234 Abc street, Hometown USA

pytests/test_index.py:29: AssertionError</failure></testcase><testcase classname="pytests.test_index" file="pytests/test_index.py" line="31" name="test_conda_environment_activated" time="0.0018877983093261719"></testcase></testsuite>